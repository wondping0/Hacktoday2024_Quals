from sympy.ntheory.modular import crt
from Crypto.Util.number import *
import gmpy2
import random

datas = open("data.txt","rb").readlines()+open("data1.txt","rb").readlines()+open("data2.txt","rb").readlines()

mias = {}

for i in datas:
    enc = i.decode().strip().split(":")
    if enc[1] not in mias.keys():
        mias[enc[1]] = [enc]
    else:
        mias[enc[1]].append(enc)

lp = []
for i in mias.keys():
    if(len(mias[i])>len(lp)):
        lp = mias[i]

datas = []
e = int(lp[0][1])
for i, j, k in lp:
    datas.append([int(i), int(k)])

print(e, len(datas))

tampM = [57588010297589101501195819558287353219053806943823824167012890847368796781305089056045111597348583897171583814444150016596623227858683401615344864138430509906599494963277932068967649588626105752129251758115126102467743528391991719748607942403418299273856034007308895835406486215354780275072954746782412694481, 87547221337073037946128331183603948301534132859808331211446437299578281413853885237416579304473695639189000735379920176870597347070766947899051819044818322049737362360623218137964863906358029120844197139282371435133818192251675178645986644203697990612831222256266707277501878120177424903945235808619965090853, 92167117038540317016454868413175905717274895026675015409000569214496221039170342607816548630922267896868443706604364607505152885846773306871438066962543982790476237396016376064743062706093781785214282898877632714676847608869023094968357681204533008004677164217657965131822795926675049193198339460323304502747, 86316581634393095268597519886899306937748338130221741216034783396821574582867651175476298708427122982310091795996719520566267849280763511639395168274007826568752858408996977401764862617793633510080457493291266795502354547749949188711821729150429066649607687866303634099328874320540378855096384953827378929819, 83844577848059410080403346672256528514184039724077695591544131401016329220872997238220991229865149020956479365392785251665662890681196870159202647114246530826133449828256651962120019903068318062068360184262833141848250562469087338795380104707684178358301940207767245372531639187399915791398803072920021320107, 93214013596521943711744710731268139402534059940948783253802081653886872085435285999839443497763087425291045428232907778142663923381358103415116034427137303078913932355759810973039765697053058840837652942769662855898133729909107662930654075894976674572352596903512864905126226714616233205043723238485310810033, 115157375586801075336355674486187131216989900472494156865104458113298654459284372003779072644650218758390906712278564763843980784684989659963155807253423576640551705919882271016281387072818492840519511404103975464436810145520751694910338559922986185568213874003503152760218133072521684956259484045224628693549, 112374797785797620171177606629475492579360288289876483178909045670675224954004077193488488152342336688270333320906106641403307403447133975563260472966589477755257928601908347523119732665728557848719291445726953835034627689663288306488748602713696213380044219146363405667398708533425241376520196819233804778217, 161122280291885646679225997066033203209427935387136722237756802391715399356057578714774543305741667976196367893458952245213330224051124855367584150501745650720531386720943410020240751586768239986826283275604991933644447878964408733810691539954309625270060830201851515806551357302701453132423395369971202830709] 
tampV = [36549063049670222871475930290518859609932431988120708081365268358913782852007646137498016994790819281205571806622677065820328354199936253663922810505013956269952103681001723833169337584026073710934585631202956007532268541110781737146277056520407543888050411324650392322772760844032073160379058496902109675630, 46998133143036562872786561991165511325099037359563272640224888530934265623418180983831138596053762947288485345805631123447874592579342000252289418104115174017719103992902138759969823352660952829023873961047757664472266194962545903470900854750607671410508309017630448902108983832090614626025066571070226901646, 7910716888473577642063069764530721016507338191556864625200932307955825322094401000620828928881232012673163805842978694291981863988697351126787716841908731332053341150237801648085949053295276076243746437378793429068697749494856728493618408937790577825830903471873066599510984915925459802291571594899798433979, 8041954433643688156330553349462863065608350810406445831504692601308254186085255602220419756846625183430441961727664044570420608426838643238244686525421961645835589578867008117199630626791346954961746767440136463186557905337481163562342048521509784242714811063146135967310986205383514222579877771718664334498, 37228589285215553159829414210011184073865065233414292772241186332485672393997497594159031051134709479749050635264568641727923537539417530422322153160374485865806778646127381421375328534681260592484937006167115115223799653059986962775037355185399745309731397631840758475895589927395462497308581755197723746002, 6016675693088841777222116123342374869944971280637046840794751618160233540993525908672558645317590888594784943958547609270415360707970765273565197777720675204583783451467643800675707475526855768316706274818798805225051767837171222061974218178040325877861824337005585183759899481602989934091489270761844873248, 35363069444693951694022563134365735907815086103379595694248784909741768460178099871660611469182949744679849338769502439203588782474603043044634102582996040891498464202560698358478405638953019005138551280092371119961315252373528095233796760800083860243088649545324960730741417990626849935177866818638352519950, 19717291926620294897145587743964980647963611168274531943426360286961815104382306295869985820920062736432621167657529393941491994035130447400642919768758311154923808209270994911711188552389865481639265120048123446710553604619779438636747167989887232006815523561282364842113842913988324861863395860592125469107, 25132399028653932054692483485379843777321645391106840442695012818209581795750247091255240948107951879302189935070444355216672549872874118289702245445116694073092050253074289520461342327972411552172126034636692091776397714037843569400600756062109092748307947725755034978150574736147037139702865894140840314946]

newdata = []
for ms, vs in datas:
    if(ms not in tampM):
        m = tampM + [ms]
        v = tampV + [vs]
        try:
            hasil = crt(m, v)
            root = gmpy2.iroot(int(hasil[0]),e)
            # print(int(root[0]).bit_length())
            if(not root[1]):
                newdata.append([ms, vs])
                # print(long_to_bytes(root[0]))
                # print(m, v)
                # break
        except:
            pass

datas = newdata

tampM = [89206987293087159498745322589939884896475651145163575949855287059248632097377427757784087146750321274906731506506746552353066061447660538727093735806780454151497081280599595258192714637403666743948662468146240286535971828230219890973917828670068924591396954093269518369765752714226205941510496439961979653177, 103145449843338642967474254225369192411825991148924374570945036471934735840098049073054948992004483705744775233349094488465920191129734586265270287237074177833865631758580718066867610033520290863586809470783615944611236102072397981241595999023395963189375273428081278672539938682197264656921543953525467445503, 96850109948975773694547351098707150545738986869470489301843597199098821525834856369533763899744859183990965713059703231654368731368325410730726618895895939488807214510895400956746481411226533976210399474496594643694952995933896390259835269191725922933180237543354452068991259314217351405216974551289266903339, 74316101529041382885418032287905792014454030881314958847245311166280075723509807716418370427543989299116410922032769592759450499331031239497182366610081725801029363806838174548004889030740343273277825028569781632333917018371210305881709733325207685458980564107515892983164222829195637249661216915770982792711, 53290018026134340934776376852253385476848667399069587222961481899249652192089347408267242584258670023598809500156707219523623639448114040965667587052109898001148035396392375106900398089446629186082646981814184444593865930803608337523965681914232742685812878831443216949965861314430131037036883688586628439263, 108727397530602687382053387331425727005770771623919453407854888873849519838803111688837178241071241314086252269102047203810984239584664523743627678525953017923569059356787466188057384582316086206592749547433690649470002275283388237661591108890735399837027584498268780936700224037856661792724479205755181812239, 74787895838737836680890959811247124104739026854293269245638393636512765637730684658126140673214176279832683497109818458750332077120898647629656914009568536520087836395334335471181105383667498579770925226500317979674925902422221702881920518661282441151836920266321255157300135185647004705442586169729022537697, 85177497611724230574506474880820505901939251827289221913119930440159608027009435124056452785933964716832540144994858007629254000785739350167066127398708280062244848165515401264336532523921119711137190618039245889087372174624609233141347229412752774584988806818645317192097678784392146410219978322174744538787, 58440329648153581180160150616149792908124484668268251610389263772174826327814570437112993066316948837267888707341850855706506498238945365929351408157286025138753754404946641477535580363757691757118450328354132451347213464563901783278610378132914691993504496779578173466908675986771154148301707094576093092897] 
tampV = [19995808763607606697172951868701217161555086993634459785564088885445193559024153002150019494281566052877043231324495667612581634500357762728944496144992971866488096243664715830767737952145010157941496924757666434644349988833385474193135526017377125686197086249647398419067903766607343670510357002561138661031, 55669960132325862023411481991253990729905390412461633445464204099731013102350348684793763076054860536445304655887456326780358582751602014317108964722241024570338130339211088474272775122637691744739998006808479917932042385998770173122125762117845328922297029724167317711093539335930287073249621366398042770640, 67348301500397991293460873187939974361584941162394459800540676169548359246222898960464456314783034991677425091953901217297255901050115294635082326030209413459966932793725791426647174528429750011327031445469703467688283482852303799889859103645112834585142001163397436673172446333571488770644564376174917387243, 51957439860858501751954988736180396999310715708477981290908447803416932649255218265903115218804626075875796556765556615428323518456604932362929186817577458147177477802993485173597765705371768875135132792099874673826615664491870749269006865752787647358242110532298462713451246763894817158663052575374246921194, 49160460894456852100461228688923614918204299218165729368728768140008341883061465784833342748719722080180804194386993020717408424287612077381956039443248205919231469606605368326054232179135694966722217842269479599259089654215627617752228320867318733604074116906423846300032494860669722810162238925594334557268, 16830817620645082571075150764357755722845175088614447841739481458138262308090199948294162902413969397647057820437210520938117167196934687655657736171339119230211341244323530269235828420563229557408705449212135090810600349824692348631619244365302012556588910903595690297265216556795756788719304893955755549933, 23899456361250099040708451959399055829231549637345143915559569270037798575461230690368669299851935494166386310492898775676053015540799269027125753952776166019613375131340685370107801807812602493951511121840425271455133551569276432167787877373641040859089655223372834017864768547868761704900222635684032522413, 50489692660585996844739420245595087990479134227642149561348742426989888780383069692391500034292337774487105320050081073209696826235523251459378565237552760697405914445012933523966365890489415329531209497713268426211706534639456679947361149050394231632790020952605507890141924633041723518799148443124588676528, 3749542238323836190370120875536419788085433901162612157278957060951014561180263861697169769073783158557654760982771248840222913376443247595402657645277338787649099717533083455935503703239411725243610779084953521605772915324933310467398503675090296920148005398479595526252292440017196507830998922785900657786]
newdata = []
for ms, vs in datas:
    if(ms not in tampM):
        m = tampM + [ms]
        v = tampV + [vs]
        try:
            hasil = crt(m, v)
            root = gmpy2.iroot(int(hasil[0]),e)
            # print(int(root[0]).bit_length())
            if(not root[1]):
                newdata.append([ms, vs])
                # print(long_to_bytes(root[0]))
                # print(m, v)
                # break
        except:
            pass

datas = newdata






while True:
    hasil = random.choices(datas, k=9)
    m = []
    v = []
    for i in hasil:
        m.append(i[0])
        v.append(i[1])
    try:
        hasil = crt(m, v)
        root = gmpy2.iroot(int(hasil[0]),e)
        # print(int(root[0]).bit_length())
        if(root[1]):
            print(long_to_bytes(root[0]))
            print(m, v)
            # break
    except:
        pass

